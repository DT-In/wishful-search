!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.WishfulSearch=t():e.WishfulSearch=t()}(self,(()=>{return e={865:function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(s,r){function i(e){try{l(o.next(e))}catch(e){r(e)}}function a(e){try{l(o.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}l((o=o.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.autoAnalyzeObject=void 0;const r=s(n(351)),i=s(n(606)),a={system:e=>`EXAMPLE_JSON:\n\`\`\`\n${JSON.stringify(e,null,2)}\n\`\`\``,user:"Outline a typespec in typescript for the EXAMPLE provided."},l={user:"GUIDELINES:\n1. Prefer flat tables when necessary, instead of making additional tables.\n2. Encode datatypes in the column names when possible.\n3. Ignore normalization and avoid junction tables, we're looking for a one-to-many relationship between one main table and multiple sub-tables, repetition is okay.\n\nTalk me through (in markdown) how you would structure one of more Sqlite tables to hold this information following GUIDELINES, inferring things like datatypes, what information is being managed, what decisions you would make, step-by-step. Then outline the overall structure of the tables and which columns would need comments in the final DDL to clear any confusion. Be exhaustive, and explain your decisions. Skip primary keys when they're not really needed."},u={user:"Please generate the valid Sqlite DDL for me with comments, and place it in sql code blocks."},c={system:e=>`DDL:\n${e}`,user:"Convert theDDL into a structure of this typespec:\n```typescript\nexport type DDLColumnBase = {\n  name: string; // Name of the column\n  columnSpec: string; // SQlite type of the column\n  staticExamples?: string[]; // Statically provided examples of potential values in the column\n  description: string; // Description of the column\n  foreignKey?: {\n    // Is this a foreign key? which table and column does it connect to? Only one-to-many are allowed.\n    table: string;\n    column: string;\n  };\n};\n\nexport type DDLColumnMeta = {\n  dynamicEnumSettings?: // Settings for generating dynamic enums.\n  | {\n        type: 'EXHAUSTIVE'; // Provide an exhaustive list of all distinct values.\n        topK?: number; // Only save the top K values.\n      }\n    | {\n        type: 'MIN_MAX'; // Provide a minimum and maximum range for the values found.\n        format: 'DATE' | 'NUMBER';\n      }\n    | {\n        type: 'EXHAUSTIVE_CHAR_LIMITED';\n        charLimit: number; // Total number of characters to limit the output to. Making this a token limit would be better, but it makes us more model dependent and more expensive to compute\n      };\n  dynamicEnumData?: // Data (generated at runtime) for the enums.\n  | {\n        type: 'EXAMPLES';\n        examples: string[];\n      }\n    | {\n        type: 'MIN_MAX';\n        exceptions: string[]; // Exceptions to the range, like null\n        min: string;\n        max: string;\n      };\n  visibleToLLM: boolean;\n};\n\nexport type DDLColumn = DDLColumnBase & DDLColumnMeta;\n\nexport type DDLTable = {\n  name: string;\n  columns: DDLColumn[];\n};\n```\n\nDon't leave any columns out, be exhaustive."},h={system:(e,t)=>`TYPESPEC:\n\`\`\`typescript\n${e}\n\`\`\`\n\nDDL:\n\`\`\`sql\n${t}\n\`\`\``,user:"I need a typescript function called objectToRows to help me insert an object of type TYPESPEC using the sql.js library into tables structured with DDL. The function should take in an array of flight objects like TYPESPEC, and spit out a 3 dimensional string array, with each top level element for each table. Make sure typecast any initial values to prevent errors. Also make sure to check if top-level objects are null before accessing them. Use the Date function to make sure stringified dates are converted back when needed. Make sure none of the values are undefined because we'll insert them later. Use sensible defaults."};function d(e,t,n,s){return o(this,void 0,void 0,(function*(){let o=null!=s?s:null,d=null,f=null,m=null,y=null;if(n&&!r.default.existsSync(n))throw new Error(`Markdown save location ${n} does not exist!`);const p=[{role:"system",content:a.system(e)},{role:"user",content:a.user}];if(!o){if(console.log("Generating typespec..."),o=yield t(p),!o)throw new Error("No response from LLM while generating typespec!");const e=o.match(/```typescript([\s\S]*?)```/g);(null==e?void 0:e.length)&&(o=e[0].replace(/```typescript/g,"").replace(/```/g,"").trim())}try{if(console.log("Generating table structure..."),p.push({role:"assistant",content:o}),p.push({role:"user",content:l.user}),m=yield t(p),!m)throw new Error("No response from LLM while generating table structure!");if(p.push({role:"assistant",content:m}),p.push({role:"user",content:u.user}),console.log("Generating DDL..."),d=yield t(p),!d)throw new Error("No response from LLM while generating DDL!");const e=d.match(/```sql([\s\S]*?)```/g);(null==e?void 0:e.length)&&(d=e[0].replace(/```sql/g,"").replace(/```/g,"").trim());const n=[{role:"system",content:c.system(d)},{role:"user",content:c.user}];if(f=yield t(n),!f)throw new Error("No response from LLM while structuring DDL!");const s=f.match(/```typescript([\s\S]*?)```/g);(null==s?void 0:s.length)&&(f=s[0].replace(/```typescript/g,"").replace(/```/g,"").trim());const r=[{role:"system",content:h.system(o,d)},{role:"user",content:h.user}];if(console.log("Generating object to relational function..."),y=yield t(r),!y)throw new Error("No response from LLM while generating objectToRow!");const i=y.match(/```typescript([\s\S]*?)```/g);(null==i?void 0:i.length)&&(y=i[0].replace(/```typescript/g,"").replace(/```/g,"").trim())}catch(e){console.error("Error running full auto analyze pipeline - ",e)}finally{if(n){const t=i.default.join(n,`analysis_${(new Date).toISOString()}.md`);console.log(`Saving to ${t}...`);const s=((e,t,n,o,s,r)=>`# Automated Object Analysis\n*All the key information in this file was generated by an LLM. Treat it as a starting point, don't ever run auto-generated code without a sandbox unless you have checked it yourself.*\n\nThe primary intent for this analysis is to go from an object to all the tools you need to use this library. The hardest part is the object-to-relational conversion, of converting a (potentially) nested json into flat tables that can be queried.\n\nWe will generate the following things:\n1. A typespec - We need good type definition for our incoming object. You might already have this, in which case make sure to provide a string version to the function to treat this as a starting point.\n2. DDL - The SQLite table descriptors that can hold the information in the object.\n3. Structured DDL - This is an internal type that is used by the library to add additional information - like example values, potential min and max ranges, which fields are visible to the LLM converting natural language to query, etc. Most of this is metadata intended for the library and the LLM, and are stripped out when creating the tables.\n4. ObjectToRow - This is ostensibly the hardest function out of the bunch, so treat it as a starting point. It should do the drudge work of writing a function to turn every field in the JSON into a flat string array that sqlite can ingest.\n\n# Typespec\n\n\`\`\`typescript\n${t}\n\`\`\`\n\n${o?`# SQL Tables\n\`\`\`sql\n${o}\n\`\`\``:""}\n\n${s?`# Structured DDL\n\`\`\`typescript\n${s}\n\`\`\``:""}\n\n${r?`# Object to Rows function\n\`\`\`typescript\n${r}\n\`\`\``:""}\n\nSee [Examples] for an example of how to use this code to create an instance of the search engine.\n\n# Appendix\n\n## Input Object\n\n\`\`\`json\n${JSON.stringify(e,null,2)}\n\`\`\`\n\n${n?`## Reasoning for table structure\n\n${n}`:""}\n`)(e,o,m,d,f,y);if(!r.default.existsSync(n))throw new Error(`Markdown save location ${n} does not exist!`);r.default.writeFileSync(t,s)}}return{typespec:o,tableStructure:m,ddl:d,structuredDDL:f,objectToRowFunc:y}}))}t.autoAnalyzeObject=d,t.default=d},988:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateAutoSearchMessages=void 0;const o=n(699),s=(e,t)=>`The user had this USER_QUESTION: ${e}\n\nWe tried the following modified questions, and got these queries and results:\n\n${t.map(((e,t)=>` - ${t+1}: "${e.question}" generated "${e.query}" which returned ${e.results.count} results with top prettified result "${e.results.topResultStr}". ${e.suitabilityDesc?`Suitability was ${e.suitabilityScore} (${e.suitabilityDesc}`:""}`)).join("\n")}\n\nWe can improve the results by looking for ways to increase suitability. Check for patterns (like consistent no resutls, same result over again, etc). Return your analysis following this typespec, and be exhaustive and thorough.\n\n'''typescript\n${o.AnalysisTypespec}\n\`\`\`\n\nValid JSON:`;t.generateAutoSearchMessages=function(e,t,n){return[{content:(o=e,`You can only return valid JSON.\n\nInformation is stored in tables with this schema:\n\`\`\`\n${o}\n\`\`\``),role:"system"},{content:s(t,n),role:"user"}];var o}},233:function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(s,r){function i(e){try{l(o.next(e))}catch(e){r(e)}}function a(e){try{l(o.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}l((o=o.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.LLMSearcheableDatabase=void 0;const r=s(n(470));class i{static create(e,t,n,s,a){return o(this,void 0,void 0,(function*(){const o={locateFile:a?()=>a:void 0},l=yield(0,r.default)(o),u=new l.Database;return u.run(e),new i(u,l,e,t,n,s)}))}constructor(e,t,n,o,s,r){if(this.sqljsSQL=t,this.strDDL=n,this.dbname=o,this.key=s,this.objectToTabledRow=r,this.db=e,this.tableNames=this.getTableNames(),!this.tableNames.includes(s.table))throw new Error(`Primary table ${s.table} not found in database`);this.tableNames=[s.table,...this.tableNames.filter((e=>e!==s.table))]}getTableNames(){const e=this.db.exec('SELECT name FROM sqlite_master WHERE type="table"');if(!e||!e.length||!e[0])throw new Error("No tables found in database");return e[0].values.flat()}getEnums(e,t=!1){const n=t?`SELECT ${e.column}, COUNT(${e.column}) as frequency\n    FROM ${e.table}\n    GROUP BY ${e.column}\n    ORDER BY frequency DESC;`:`SELECT DISTINCT ${e.column} FROM ${e.table}`,o=this.db.exec(n);return o.length&&o[0]?t?o[0].values.map((e=>e[0])):o[0].values.flat():[]}rawQuery(e){const t=this.db.exec(e);if(!(e=e.split(";")[0].trim()).toUpperCase().startsWith("SELECT"))throw new Error("Raw Query to db must start with SELECT");if(-1!==e.indexOf(";"))throw new Error("Raw Query to db must be a single statement");return t.length&&t[0]?t[0].values.flat():[]}getColumnCount(e){const t=this.db.exec(`SELECT COUNT(*) FROM pragma_table_info('${e}')`);if(!t||!t.length||!t[0])throw new Error("Tried to get columns on invalid db");return t[0].values[0][0]}delete(e){const t=e.map((e=>"?")).join(","),n=`DELETE FROM ${this.key.table} WHERE ${this.key.column} IN (${t})`;this.db.run(n,e)}insert(e,t=!1){const n=e.map((e=>this.objectToTabledRow(e))),o=n.filter((e=>e.length===this.tableNames.length));if(o.length!==n.length&&t)throw new Error(n.length-o.length+" rows do not match the number of columns in the table.");const s=[];for(const e of n)for(let n=0;n<this.tableNames.length;n++){const o=this.tableNames[n],r=this.getColumnCount(o),i=this.db.prepare(`INSERT OR IGNORE INTO ${o} VALUES (${Array(r).fill("?").join(",")})`);try{this.db.run("BEGIN"),e[n].forEach((e=>{try{i.bind(e),i.step()}catch(o){if(t)throw new Error(`Error inserting row ${e[n]} - ${o}`);s.push({index:n,error:o})}})),this.db.run("COMMIT")}catch(e){throw this.db.run("ROLLBACK"),e}}return s}clearDb(){this.db.close(),this.db=new this.sqljsSQL.Database,this.db.run(this.strDDL)}}t.LLMSearcheableDatabase=i},607:function(e,t,n){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var s=Object.getOwnPropertyDescriptor(t,n);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,s)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),s=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||o(t,e,n)},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.autoAnalyzeObject=t.LLMAdapters=t.WishfulSearchEngine=void 0;var i=n(769);Object.defineProperty(t,"WishfulSearchEngine",{enumerable:!0,get:function(){return i.WishfulSearchEngine}});var a=n(771);Object.defineProperty(t,"LLMAdapters",{enumerable:!0,get:function(){return r(a).default}});var l=n(865);Object.defineProperty(t,"autoAnalyzeObject",{enumerable:!0,get:function(){return r(l).default}}),s(n(699),t)},771:function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(s,r){function i(e){try{l(o.next(e))}catch(e){r(e)}}function a(e){try{l(o.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}l((o=o.apply(e,t||[])).next())}))},s=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},o("next"),o("throw"),o("return"),t[Symbol.asyncIterator]=function(){return this},t);function o(n){t[n]=e[n]&&function(t){return new Promise((function(o,s){!function(e,t,n,o){Promise.resolve(o).then((function(t){e({value:t,done:n})}),t)}(o,s,(t=e[n](t)).done,t.value)}))}}};Object.defineProperty(t,"__esModule",{value:!0}),t.getMistralAdapter=void 0;const r=n(555);function i(e){return{llmConfig:{enableTodaysDate:!0,fewShotLearning:[]},callLLM:function(t,n){var i,a,l,u,c,h;return o(this,void 0,void 0,(function*(){n&&"assistant"!==t[t.length-1].role&&t.push({role:"assistant",content:n});const o=function(e){return e.map(((t,n)=>"assistant"===t.role?`${t.content}${n<e.length-1?"</s>":""}`:`${n>0&&"assistant"!==e[n-1].role?"":"<s>"}[INST] ${"system"===t.role?`<system>${t.content}</system>`:t.content} [/INST]`)).join(" ")}(t),d=yield(0,r.callOllama)(o,null!==(c=null==e?void 0:e.model)&&void 0!==c?c:"mistral",11434,null!==(h=null==e?void 0:e.temperature)&&void 0!==h?h:0);try{for(var f,m=!0,y=s(d);f=yield y.next(),!(i=f.done);m=!0){u=f.value,m=!1;const e=u;if("completeMessage"===e.type)return e.message.split("</s>")[0]||null}}catch(e){a={error:e}}finally{try{m||i||!(l=y.return)||(yield l.call(y))}finally{if(a)throw a.error}}return null}))}}}t.getMistralAdapter=i;const a={getOpenAIAdapter:function(e,t){const n={model:"gpt-3.5-turbo",temperature:0};return{llmConfig:{enableTodaysDate:!0,fewShotLearning:[]},callLLM:function(s,r){return o(this,void 0,void 0,(function*(){if(s.length<1||!s[s.length-1])return null;if("assistant"===s[s.length-1].role){const e=s[s.length-1].content;(s=[...s.slice(0,s.length-1)])[s.length-1].content=`${s[s.length-1].content}\n\n${e}`}const o=yield e.chat.completions.create(Object.assign({messages:s},Object.assign(Object.assign({},n),t||{})));return o&&o.choices&&o.choices.length&&o.choices[0]&&o.choices[0].message.content||null}))}}},getClaudeAdapter:function(e,t,n,s){const r={model:"claude-2",temperature:0};return{llmConfig:{enableTodaysDate:!0,fewShotLearning:[]},callLLM:function(i,a){return o(this,void 0,void 0,(function*(){let o=i.map((n=>"user"===n.role?`${e} ${n.content}`:"assistant"===n.role?`${t} ${n.content}`:`${e} <system>${n.content}</system>`)).join("");return"assistant"!==i[i.length-1].role&&(o+=`${t}${a?` ${a}`:""}`),(yield n.completions.create(Object.assign({prompt:o,max_tokens_to_sample:1e4},Object.assign(Object.assign({},r),s||{})))).completion||null}))}}},getMistralAdapter:i};t.default=a},473:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateLLMMessages=t.HISTORY_RESET_COMMAND=void 0,t.HISTORY_RESET_COMMAND="Ignore all previous filters. ";const n=(e,t)=>`You are a SQLite SQL generator that helps users answer questions from the tables provided. Here are the table definitions:\n\nFLIGHT_DATABASE_DDL:\n\`\`\`sql\n${e}\n\`\`\`\n\n${t?`Today's date: ${t}.`:""}\n\nRULES:\n"""\n1. Do not use LIMIT, DISTINCT, ARRAY_LENGTH, MAX, MIN or AVG.\n2. Prefer \`strftime\` to format dates better.\n3. **Deliberately go through the question and database schema word by word** to appropriately answer the question\n4. Prefer sorting the right values to the top instead of filters if possible.\n5. Number of segments for a direct flight is one.\n6. Try to continue the partial query.\n"""\n\nProvide an appropriate SQLite Query to return the keys to answer the user's question. Only filter by the things the user asked for, and only return ids or keys.`,o=(e,n)=>`${n?t.HISTORY_RESET_COMMAND:""}${e}`,s=(e,t)=>`${t} ${e}`;t.generateLLMMessages=function(e,t,r,i,a,l){const u=l?(new Date).toLocaleDateString():void 0,c=[];if(c.push({role:"system",content:n(e,u)}),a)for(const{question:e,partialQuery:t}of a)c.push({role:"user",content:o(e,!1)}),c.push({role:"assistant",content:s(t,r)});if(i)for(const{question:e,partialQuery:t}of i)c.push({role:"user",content:o(e,!1)}),c.push({role:"assistant",content:s(t,r)});return c.push({role:"user",content:o(t,!(i.length>0))}),(null==a?void 0:a.length)||c.push({role:"assistant",content:r}),c}},555:function(e,t){"use strict";var n=this&&this.__await||function(e){return this instanceof n?(this.v=e,this):new n(e)},o=this&&this.__asyncGenerator||function(e,t,o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var s,r=o.apply(e,t||[]),i=[];return s={},a("next"),a("throw"),a("return"),s[Symbol.asyncIterator]=function(){return this},s;function a(e){r[e]&&(s[e]=function(t){return new Promise((function(n,o){i.push([e,t,n,o])>1||l(e,t)}))})}function l(e,t){try{(o=r[e](t)).value instanceof n?Promise.resolve(o.value.v).then(u,c):h(i[0][2],o)}catch(e){h(i[0][3],e)}var o}function u(e){l("next",e)}function c(e){l("throw",e)}function h(e,t){e(t),i.shift(),i.length&&l(i[0][0],i[0][1])}};Object.defineProperty(t,"__esModule",{value:!0}),t.callOllama=void 0,t.callOllama=function(e,t,s=11434,r=0){return o(this,arguments,(function*(){const o=JSON.stringify({model:t,template:e,options:{temperature:r}}),i=yield n(fetch(`http://localhost:${s}/api/generate`,{method:"POST",headers:{"Content-Type":"application/json"},body:o}));if(!i.ok)throw new Error(`Ollama fetch failed with status: ${i.status}`);{const e=i.body.getReader();let t="",o="";for(;;){const{done:s,value:r}=yield n(e.read());if(s)break;for(t+=(new TextDecoder).decode(r);;){const e=t.indexOf("{"),s=t.indexOf("}");if(-1===e||-1===s)break;{const r=t.slice(e,s+1);try{const e=JSON.parse(r);if(!e.model)throw new Error("Unrecognized response from ollama - missing model field");if(e.response&&(yield yield n({type:"token",token:e.response}),o+=e.response),e.done||-1!==o.indexOf("</s>"))return yield yield n({type:"completeMessage",message:o}),yield n(void 0);t=t.slice(s+1)}catch(e){throw console.error("Error parsing Ollama response object - ",r),e}}}}}}))}},769:function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(s,r){function i(e){try{l(o.next(e))}catch(e){r(e)}}function a(e){try{l(o.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}l((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.WishfulSearchEngine=void 0;const s=n(988),r=n(233),i=n(473),a=n(543);class l{static create(e,t,n,s,i,u,c,h=!0,d=!0,f=!1,m){return o(this,void 0,void 0,(function*(){(0,a.validateStructuredDDL)(t);const o=yield r.LLMSearcheableDatabase.create((0,a.generateSQLDDL)(t,!0),e,n,s,m);return new l(o,e,t,n,i,u,c,h,d,f)}))}constructor(e,t,n,o,s,r,i,a,l,u){this.name=t,this.tables=n,this.primaryKey=o,this.llmConfig=s,this.getKeyFromObject=i,this.saveHistory=a,this.enableDynamicEnums=l,this.sortEnumsByFrequency=u,this.history=[],this.db=e,this.queryPrefix=this.generateQueryPrefix(),this.latestIncompleteQuestion=null,this.elementDict=i?{}:null,this.callLLM=r}generateQueryPrefix(){return`SELECT ${this.primaryKey.column} FROM ${this.primaryKey.table}`}computeEnums(){if(this.enableDynamicEnums)for(const e of this.tables)for(const t of e.columns.filter((e=>void 0!==e.dynamicEnumSettings))){const n=this.db.getEnums({table:e.name,column:t.name},this.sortEnumsByFrequency),o=t.dynamicEnumSettings;if("EXHAUSTIVE"===o.type)t.dynamicEnumData={type:"EXAMPLES",examples:o.topK?n.slice(0,o.topK):n};else if("MIN_MAX"===o.type&&"NUMBER"===o.format){const e=n.map((e=>parseFloat(e))).filter((e=>!isNaN(e))),o=Math.min(...e),s=Math.max(...e);t.dynamicEnumData={type:"MIN_MAX",min:Number.isInteger(o)?o.toString():o.toFixed(2),exceptions:n.filter((e=>isNaN(parseFloat(e)))),max:Number.isInteger(s)?s.toString():s.toFixed(2)}}else if("MIN_MAX"===o.type&&"DATE"===o.format){const e=n.map((e=>Date.parse(e)));t.dynamicEnumData={type:"MIN_MAX",exceptions:n.filter((e=>isNaN(Date.parse(e)))),min:new Date(Math.min(...e)).toISOString(),max:new Date(Math.max(...e)).toISOString()}}else if("EXHAUSTIVE_CHAR_LIMITED"===o.type){const e=[];let s=0;for(const t of n){if(s+t.length>o.charLimit)break;e.push(t),s+=t.length}t.dynamicEnumData={type:"EXAMPLES",examples:e}}}}insert(e,t=!1){const n=this.db.insert(e,t);if(this.computeEnums(),this.getKeyFromObject&&this.elementDict)for(const t of e)this.elementDict[this.getKeyFromObject(t)]=t;return n}remove(e){if(this.elementDict)if(e)for(const t of e)delete this.elementDict[t];else this.elementDict={};return e?this.db.delete(e):this.db.clearDb()}generateSearchMessages(e){return this.saveHistory&&(this.latestIncompleteQuestion=e),(0,i.generateLLMMessages)((0,a.generateSQLDDL)(this.tables,!0),e,this.queryPrefix,this.history,this.llmConfig.fewShotLearning,this.llmConfig.enableTodaysDate)}cantReturnFullObjects(){return!this.getKeyFromObject||!this.elementDict}searchWithPartialQuery(e,t){this.saveHistory&&this.latestIncompleteQuestion&&this.history.push({question:this.latestIncompleteQuestion,partialQuery:e}),this.latestIncompleteQuestion=null;const n=this.queryPrefix+" "+e;t&&console.log("\nQuery: ",n);const o=this.db.rawQuery(n);return this.cantReturnFullObjects()?o:o.map((e=>this.elementDict[e])).filter((e=>!!e))}getQueryFromLLM(e){return o(this,void 0,void 0,(function*(){if(!this.callLLM)throw new Error("No LLM call function provided. Use generateSearchMessages instead if you intent to make your own calls.");let t=yield this.callLLM(e,this.queryPrefix);if(!t)throw new Error("Could not generate query from question with LLM");const n=t.match(/```sql([\s\S]*?)```/g);(null==n?void 0:n.length)&&(t=n[0].replace(/```sql/g,"").replace(/```/g,"").trim()),t.toLowerCase().startsWith(this.queryPrefix.toLowerCase())&&(t=t.substring(this.queryPrefix.length).trim());const o=/^\s*?SELECT[\s\S]*?FROM[\s\S]+?\s/;return o.test(t)&&(t=t.replace(o,"").trim()),t}))}autoSearch(e,t,n,r,i,l,u,c,h){return o(this,void 0,void 0,(function*(){if(c||(c=e),u&&console.log(`\n----------------------------------------------\nAutosearch Rounds Left: ${n+1},\n   Main Question: ${e}\n   Current question: ${c}.\n   Searching...`),this.cantReturnFullObjects())throw new Error("Please provide a getKeyFromObject function at creation to use autoSearch. Otherwise, use search instead.");if(i||(i=this.callLLM),!i)throw new Error("Please provide a callLLM function at creation or as a parameter to use autoSearch. Otherwise, use search instead.");const o=this.generateSearchMessages(c),d=yield this.getQueryFromLLM(o),f=this.searchWithPartialQuery(d,l);if(u&&(f.length?console.log(`\nFiltered ${f.length} from ${Object.keys(this.elementDict).length}. Top result: `,t(f[0])):console.log("\nNo results.")),n<=0)return f;h||(h=[]),h.push({question:c,query:this.queryPrefix+" "+d,results:{count:f.length,topResultStr:f.length?t(f[0]):"No results."}});const m=(0,s.generateAutoSearchMessages)((0,a.generateSQLDDL)(this.tables,!0),e,h);u&&console.log("\nAnalysing...");let y=yield i(m,this.queryPrefix);if(!y)throw new Error("Could not generate analysis from LLM.");y=function(e){const t=e.match(/\{[^{}]*\}/);return t?t[0].slice(1,-1):e}("{"+y+"}"),y=`{${y}}`;try{const o=JSON.parse(y);return u&&console.log(`Success: ${o.suitability} (${o.suitabilityDesc}), Success threshold: ${r}`),h[h.length-1].suitabilityDesc=o.suitabilityDesc,h[h.length-1].suitabilityScore=o.suitability,o.suitability>=r?(u&&console.log("Success! Returning results."),f):(u&&(console.log("\nUser desires: ","\n - "+o.desires.join("\n - ")),console.log("\nThoughts: ","\n - "+o.thoughts.join("\n - ")),console.log("\nBetter filters: ","\n - "+o.betterFilters.join("\n - ")),console.log("\n\nBetter question: ",o.betterQuestion)),yield this.autoSearch(e,t,n-1,r,i,l,u,o.betterQuestion,h))}catch(e){return console.error("Could not parse JSON analysis from this string - ",y," - ",e),f}}))}search(e,t){return o(this,void 0,void 0,(function*(){const n=this.generateSearchMessages(e),o=yield this.getQueryFromLLM(n);return this.searchWithPartialQuery(o,t)}))}autoGenerateFewShot(e,t,n=!1,s=!1,r=!1){return o(this,void 0,void 0,(function*(){if(this.latestIncompleteQuestion)throw new Error("It seems there is a search in progress, or partially completed. FewShot generation is best done at the very beginning, after seeding your data.");const o=[...this.history],a=this.callLLM;this.history=[],this.callLLM=e;let l=[];r&&console.log("############# Generating few-shot learning ########################");for(const e of t)try{const t=[...this.history];r&&console.log("Question: ",e.question),e.clearHistory&&(this.history=[]);const o=yield this.getQueryFromLLM(this.generateSearchMessages(e.question));r&&console.log(`Full Query: ${this.queryPrefix} ${o}`);const s=this.searchWithPartialQuery(o);r&&console.log(`Got ${s.length} results.`),!n||s.length?l.push({question:`${e.clearHistory?i.HISTORY_RESET_COMMAND+" ":""}${e.question}`,partialQuery:o}):(r&&console.log("Skipping question with 0 results."),this.history=t)}catch(t){if(s)throw this.history=o,this.callLLM=a,new Error(`Could not process question ${e.question} - ${t}`);console.error("Could not process question ",e.question," - ",t)}return r&&console.log("############## Generated examples:",JSON.stringify(l,null,2)),this.history=o,this.callLLM=a,this.llmConfig.fewShotLearning=l,l}))}}t.WishfulSearchEngine=l},543:(e,t)=>{"use strict";function n(e,t){const n=e.columns.filter((e=>e.foreignKey)).map((e=>{var t,n;return`FOREIGN KEY (${e.name}) REFERENCES ${null===(t=e.foreignKey)||void 0===t?void 0:t.table}(${null===(n=e.foreignKey)||void 0===n?void 0:n.column}) ON DELETE CASCADE`})),o=e.columns.filter((e=>!t||e.visibleToLLM)).map(((o,s)=>{const r=t&&function(e){var t,n,o;let s="";"EXAMPLES"===(null===(t=e.dynamicEnumData)||void 0===t?void 0:t.type)?s=`e.g. ${e.dynamicEnumData.examples.join(", ")}`:"MIN_MAX"===(null===(n=e.dynamicEnumData)||void 0===n?void 0:n.type)?(s=`between ${e.dynamicEnumData.min} and ${e.dynamicEnumData.max}`,e.dynamicEnumData.exceptions.length&&(s+=` (or ${e.dynamicEnumData.exceptions.map((e=>String(e))).join(",")})`)):(null===(o=e.staticExamples)||void 0===o?void 0:o.length)&&(s=`e.g. ${e.staticExamples.join(", ")}`);const r=[];return e.description&&r.push(e.description),s&&r.push(s),r.length?` --${r.join(" ")}`:""}(o)||"";return`${o.name} ${o.columnSpec}${s>=e.columns.length-1&&!n.length?"":","}${r}`}));return`CREATE TABLE IF NOT EXISTS ${e.name} (\n${o.join("\n")}${n.length?`\n${n.join("\n")}`:""}\n);`}Object.defineProperty(t,"__esModule",{value:!0}),t.generateSQLTableDDL=t.validateStructuredDDL=t.generateSQLDDL=void 0,t.generateSQLDDL=function(e,t){return e.map((e=>n(e,t))).join("\n\n")},t.validateStructuredDDL=function(e){if(!e.length||!e[0])throw new Error("No tables found in structured DDL, or missing primary table.");if(e.length&&e[0].columns.some((e=>!!e.foreignKey)))throw new Error("Primary (first) table in the structured ddl cannot have foreign key relationships");return!0},t.generateSQLTableDDL=n},699:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AnalysisTypespec=void 0,t.AnalysisTypespec="type Analysis = {\n  suitabilityDesc: string; // Describe how suitable or unsuitable the top result is to the USER_QUESTION in one sentence.\n  suitability: number; // between 0 to 1, one if the top result matches the USER_QUESTION and zero if not.\n  desires: string[]; // What did the user want? List what may not be in the question, but is implied (or what they don't know to look for).\n  thoughts: string[]; // Based on the DDL, the question and the desires, provide thoughts on how to improve results.\n  betterFilters: string[]; // What conditions (in English) could we have to get better results?\n  betterQuestion: string; // Reformat the question to include all of the above, to be used to generate a new query.\n}"},470:e=>{"use strict";e.exports=require("sql.js")},351:()=>{},606:()=>{}},t={},function n(o){var s=t[o];if(void 0!==s)return s.exports;var r=t[o]={exports:{}};return e[o].call(r.exports,r,r.exports,n),r.exports}(607);var e,t}));